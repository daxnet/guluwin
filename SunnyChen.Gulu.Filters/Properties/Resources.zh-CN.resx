<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="BMP_FileNameFilter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\FileNameFilter.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BMP_FileSizeFilter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\FileSizeFilter.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BMP_FileTypeFilter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\images\FileTypeFilter.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ERROR_EXTENSION_EMPTY" xml:space="preserve">
    <value>请输入扩展名列表</value>
  </data>
  <data name="ERROR_MAX_LARGER_MIN" xml:space="preserve">
    <value>最大文件大小应该小于或者等于最小文件大小。</value>
  </data>
  <data name="FILTERAUTHOR_FILENAME" xml:space="preserve">
    <value>陈晴阳</value>
  </data>
  <data name="FILTERAUTHOR_FILESIZE" xml:space="preserve">
    <value>陈晴阳</value>
  </data>
  <data name="FILTERAUTHOR_FILETYPE" xml:space="preserve">
    <value>陈晴阳</value>
  </data>
  <data name="FILTERCOMPANY_FILENAME" xml:space="preserve">
    <value>SunnyChen.ORG</value>
  </data>
  <data name="FILTERCOMPANY_FILESIZE" xml:space="preserve">
    <value>SunnyChen.ORG</value>
  </data>
  <data name="FILTERCOMPANY_FILETYPE" xml:space="preserve">
    <value>SunnyChen.ORG</value>
  </data>
  <data name="FILTERCOPYRIGHT_FILENAME" xml:space="preserve">
    <value>版权所有 © 2007-2008 SunnyChen.ORG，保留所有权利。</value>
  </data>
  <data name="FILTERCOPYRIGHT_FILESIZE" xml:space="preserve">
    <value>版权所有 © 2007-2008 SunnyChen.ORG，保留所有权利。</value>
  </data>
  <data name="FILTERCOPYRIGHT_FILETYPE" xml:space="preserve">
    <value>版权所有 © 2007-2008 SunnyChen.ORG，保留所有权利。</value>
  </data>
  <data name="FILTERDESC_FILENAME" xml:space="preserve">
    <value>用于将文件名作为过滤参数的过滤条件。您可以在此处选择过滤方式（比如文件名必须以某个字符串开始等），然后再填入相应的字符串值，系统会根据您的选择将不符合条件的文件过滤掉。本过滤条件支持正则表达式。</value>
  </data>
  <data name="FILTERDESC_FILESIZE" xml:space="preserve">
    <value>该过滤条件将判断所查找的文件大小是否符合设定，或者文件大小是否位于一个指定的范围内。如果文件大小不满足设定条件，那么改文件将不会被添加到文件列表中。</value>
  </data>
  <data name="FILTERDESC_FILETYPE" xml:space="preserve">
    <value>文件类型过滤条件。您可以将您所关注的文件类型（以扩展名列表的方式，扩展名之间用分号分隔，比如：.exe; .com; .bat）填入文本框中，系统将会把不属于这些文件类型的文件过滤掉。</value>
  </data>
  <data name="FILTERNAME_FILENAME" xml:space="preserve">
    <value>文件名过滤条件</value>
  </data>
  <data name="FILTERNAME_FILESIZE" xml:space="preserve">
    <value>文件大小过滤条件</value>
  </data>
  <data name="FILTERNAME_FILETYPE" xml:space="preserve">
    <value>文件类型过滤条件</value>
  </data>
  <data name="TEXT_CUSTOMIZED" xml:space="preserve">
    <value>(自定义)</value>
  </data>
  <data name="TEXT_IMAGE_FILE" xml:space="preserve">
    <value>图像文件</value>
  </data>
  <data name="TEXT_TEXT_FILE" xml:space="preserve">
    <value>文本文件</value>
  </data>
  <data name="TEXT_WAVE_FILE" xml:space="preserve">
    <value>波形声音文件</value>
  </data>
</root>